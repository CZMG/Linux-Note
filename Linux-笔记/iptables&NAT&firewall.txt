防火墙
硬件防火墙--数据包过滤
软件防火墙--tcpwrapper\iptables\ebtables\firewalld

包过滤防火墙技术（ACL），在网络层通过访问控制列表对数据包进行过滤。
代理服务防火墙技术，典型的就是链路级的网关。反向代理技术就是如此，典型的应用就是Nginx。

Linux内核级别直接实现的防火墙功能。
==========================================================================================
iptables 

iptables就是依赖的netfilter
RHEL7中使用的firewalld依然依赖的是netfilter，但是管理工具使用firewall-cmd。

iptables直接由内核驱动运行，编写规则也是从上往下，并且一旦匹配某一条目，就不再往下匹配，不同的服务之间，规则互不影响。

iptables 配置文件 /etc/sysconfig/iptables

配置保存和恢复：
iptables 保存 service iptables save
iptables-save > /test/iptables.txt,保存
iptables-restore < /test/iptables.txt，恢复

iptables 表 (table)
	filter表(包过滤)和nat表（地址转换）
iptables -t nat -L -n   查看nat表的规则。-t ，table指明表名，-L表示以列表，-n表示禁止反向解析。不指明查看的表名，默认为filter表。

iptables 链（chain）
filter表的三条链：
	INPUT:针对进来的数据进行过滤
	FORWARD：要求转发的数据
	OUTPUT：出去的数据
nat表的三条链：
	PREROUTING:目的地址转换
	POSTROUTING：源地址转换
	OUTPUT：防火墙自身访问时，是否转换

iptables中filter表的语法使用：
[root@centos6 ~]# iptables -t filter \
> -A|D|I \添加|删除|插入
> INPUT|OUTPUT|FORWARD \指定链
> -p tcp|udp|icmp \指定协议
> -s 1.1.1.1/24 -d 2.2.2.2/24 \指定源地址和目的地址
> --sport m:n -dport m:n \指定源端口和目的端口
> -m tcp|udp|mac --mac=|state --NEW|ESTABLISHED|RELATED|INVALID   \指定额外规则
> -j ACCEPT|REJECT|DROP|LOG \指定行为

iptables -P INPUT DROP   将filter表的INPUT链的默认规则改为DROP
iptables -F     临时清除防火墙的所有规则，无需重启
iptables -L -n --line-number            设置规则行号

iptables 中的state的四种类型：
NEW：建立连接的第一个包，通常是发起方的第一个包。
ESTABLISHED：属于一个已经建立的链接，通常都是获取到了第一个NEW包后产生的。也就是NEW的下一个状态。icmp中的重定向、错误等都属于这种类型。
RELATED：属于一个已经存在的ESTABLISHED链接存在之外的链接。ESTABLISHED的下一个状态。
INVALID：错误的链接类型，没有已知的流或者链接与它关联。通常都是包头有错误或者链接被drop之类的。

========================================================
NAT
SNAT:POSTOUTING链
	-j SNAT --to-source 10.0.0.1 
DNAT:PEREOUTING链
	-j DNAT --to-dest  20.0.0.2
OUTPUT:
	-j DNAT --to-dest  20.0.0.2 (针对防火墙自身想要上网的情况)
	
动态地址转换
	-j MASQUERADE   (自动变换公网IP的情况下使用这个动作，它会根据网卡IP自动变换)

===============================================================================
firewall 
RHEL7中默认开启的是firewalld，另外还可以使用iptables,或者ebtables。

为了防止防火墙之间产生冲突，建议关闭：
systemctl disable ebtables.service
systemctl stop  ebtables.service
systemctl mask   ebtables.service

守护进程：firewalld,有两种状态，runtime和permanent。runtime是默认状态，在这个状态下做的设置，立即生效，但服务或服务器重启，失效。permanent状态是永久生效的，但在这个状态下做的配置必须在服务或者服务器重启后才会生效。

firewall中添加了区域的概念：
drop：最严格的策略。丢弃所有，不给出任何提示。
block:提供个drop相同的策略，但会给出提示信息。
trusted:提供最宽松的策略，放行所有。（相当于iptables -F）
public:默认区域。
针对不同的区域提供不同的默认策略，可以针对services(具体服务)、ports端口、nat、端口映射、icmp过滤以及富规则的设置。

firewall-cmd --get-default-zone            查看默认区域
firewall-cmd --get-zones                   查看所有区域
firewall-cmd --set-default-zone=public     设置默认区域
firewall-cmd --get-services                查看所有服务
firewall-cmd --zone=trusted --list-all     查看某区域的所有信息
firewall-cmd --get-zone-of-interface=eno16777736      查看某块网卡对应的区域
firewall-cmd --zone=home --add/change-interface=eno16777736  将某块网卡添加/更改到home区域
firewall-cmd --zone=home --query-service=http         查询某区域中是否包含某服务
firewall-cmd --zone=home --add-service=http           将某服务添加到某网卡
firewall-cmd --zone=home --add-port=445/tcp  --permanent   将配置写入permanent状态，下次启动生效。

富规则：
firewall-cmd --list-rich-rules      查看富规则
firewall-cmd --add-forward-port port=80:proto=tcp;toaddr=20.0.0.2:toport=80   
firewall-cmd --add-masquerade       已用nat伪装
			 --add-rich-rules='rule family=ipv4 source address=20.0.0.0/24 masquerade' 