Linux的文件权限和目录配置
ll查看文件的属性，一共7段：
	权限+硬链接+文件的所有者+文件的所有组+文件的大小+文件的创建或修改日期+文件名
		权限：文件类型（1）+文件所有者的权限（3位）+文件所属组的权限（3位）+其他人的权限（3位）
			文件类型：b--块设备文件（存储，例：U盘，硬盘），c--字符型设备文件（不能用来存储的设备文件，例：键盘、鼠标），d--目录，l--软链接文件（类似windows中的快捷方式），p--管道文件（本地的程序间沟通产生的文件），s--套接字文件（通过网络，不同进程进行连接的文件）。
			r--读--4，w--写--2，x--执行--1。

修改文件的权限：
chmod  {u/g/o/ug/uo/go/ugo/a}{+/-/=}{r/w/x/rw/rx/wx/rwx}  文件名/目录名
chmod  777 文件名/目录名
chmod  -R   760 目录名          将该目录下所有的目录和文件都改成相应的权限
chmod  +x   xx                       给文件xx赋予所有用户执行权限，即ugo+x
chmod  u1:u1    passwd           修改passwd的所有者和所属组
chgrp   u2      passwd               修改passwd的所属组为u2

注：x--执行   对于目录意味着是否可以cd进去。
如果目录中含有root的文件或目录，即便普通用户对该目录具备所有权限，也无法删除root用户的文件或目录，但可以删除其他用户的文件或目录。
==================================================================================================
绝对路径和相对路径
~:当前用户所在的家目录
-：上一次所在的目录
.：当前目录
..：当前目录的上级目录
==============================================================================================
mkdir 1 2 3 4 5       创建1、2、3、4、5目录
	-p   1/2/3/4       递归创建目录
rmdir 1 2  3 4 5      删除1、2、3、4、5空目录，rmdir只能用来删除空目录。
	-p   1/2/3/4       递归删除目录
rm -f passwd          强制删除passwd文件
	-rf *                   删除当前目录下所有文件
==============================================================================================
echo $PATH         查看当前用户的指令执行路径（$是一个变量符号，PATH是变量名称）
PATH里定义的路径是当前用户所能执行的所有指令的路径。

定义环境变量的方法：
1.	PATH="$PATH":YOUR_PATH  
?	这种方法是临时的，只针对当前shell，换个shell就失效了
2.	修改文件 /ect/profile 
?	这种方法是永久的，针对所有的用户，所有的shell
3.	修改文件 ~/.bashrc 
?	这种方法也是永久的，它可以拿环境变量的设置控制在用户级别

=========================================================================
cp 原文件路径  目的路径       拷贝文件（默认不拷贝目录）
	-p   拷贝但不改变文件的时间戳
	-rf  强制递归拷贝文件夹（建议在文件夹后加*,例：/etc/*）

mv  原文件路径  目的路径      移动文件/重命名文件

touch 路径/文件名            创建文件
	文件1  文件2  文件3 ... 同时创建几个文件
===============================================================================
FHS(Filesystem Hierarchy Standard)文件系统层次标准
	四种：可以被共享的，不可以被共享的，可以被修改的，不可以被修改的。
	/usr：可以被共享的，不可以被修改 
	/boot/ /etc/:不可以被共享
	/var/www /var/mail:可以被修改的
	/var/lock /var/run:不可以被共享，可以被修改

FHS定义例三层目录下应该有的数据：/，/usr,/var
	/分区建议分的越小越好，一般8G,带GUI的系统12G左右就够了
================================================================================
cat   文件名      查看文件内容
	-n       显示行号（若有空行也算一行）
	cat不适合查看大文件，因为cat只显示一屏

nl   文件名      查看文件内容，同时显示行号（忽略空行）
	与cat一样，不适用于大文档

more  文件名      查看文件内容（不能往上翻）
	空格    一屏一屏往下翻
	回车    一行一行往下翻
	适合查看大文件

less  文件名      查看文件内容
	空格    一屏一屏往下翻
	回车    一行一行往下翻
	PgUp   一屏一屏往上翻
	PgDn   一屏一屏往下翻
	上下箭头  上下翻页
	/关键字  查找关键字（高亮显示）
	适合查看大文档

head   文件名     查看文件前10行内容
	-数字    指定行数

tail   文件名     查看文件后10行内容
	-数字    指定行数
	-f      用于实时监控，按ctrl+c退出

od -t 

string
===================================================================================
sshd.config
	Port 32483   修改端口号
	PermitRootLogin  no     不允许root使用ssh登录
	x11 Forwarding no        不允许转发图形化
	
	UseDNS no                  关闭DNS解析，加速登录
=======================================================================================
umask          文件权限过滤符
umask  0333    设置umask值
umask  -S      查看保存的权限
umask值的数字由四位数字构成，最后三位表示ugo，第一位是用来设置SUID、SGID、SBIT
root=0022
文件--666（rw-rw-rw-），目录--777(rwxrwxrwx)
                0022
644                   755
		0333
444                   444
==================================================
lsattr        查看隐藏属性
chattr  +选项  目标文件/目录      修改隐藏属性
	+a    添加a权限，目录中的内容只能创建，不能删除
	-a    删除a权限
	+A    添加A权限，不能修改文件的访问时间(atime)
	+i    添加i权限，针对文件只读，不能做任何修改；针对目录，不能删除和创建内容。包括修改权限。
	+s    删除时备份
	+S    写入时不写入缓存，直接写入硬盘。写入效率会下降。
	+u    删除时备份（用来做数据回复）（未成功过）
    只支持unix/linux系统
===================================================
passwd 用户名      修改用户密码
/etc/passwd 
/etc/shadow       用户密码文件（sha+salt,伪随机）
===================================================
SUID  --4（数字表示）
ll /usr/bin/passwd 
-rwsr-xr-x. 1 root root 30768 11月 24 2015 /usr/bin/passwd
用户位有s权限时，当前执行的用户将获取文件所有者的权限。这个权限通常只是针对文件。
SUID,只能执行二进制文件，其他脚本执行不了。
====================================================
SGID  --2（数字表示）
chmod   g+s   test/     给目录test加上s权限
目录被设置SGID后，任何人在这个目录中创建的文件，都将属于目录所属组。这个权限通常只是针对目录。
=====================================================
SBIT  --1（数字表示）
chmod  O+t   test/      给目录test加上t权限
在设置了SBIT的目录中，只有文件/目录的所有者（以及root）可以删除。
=====================================================
如果给文件/目录设置SUID、SGID、SBIT权限后，出现的是大写的S,T，表示文件/目录本身没有执行权限，如果没有权限，就没有意义。
=====================================================
文件搜索
find  目录  （-print）    查找该目录下所有文件并打印出来（-print可以不打，默认执行）
	默认情况下自动换行 -print \n
	不换行 -print0
find  目录  -name   文件名    查找该目录下某个文件
	-iname    忽略大小写
	-maxdepth 1  定义最大查找深度，最多检索多少层
	-mindepth 1  定义最小查找深度，最少检索多少层
	-type        定义文件类型（l，链接文件；d,目录；f,普通文件；c,字符文件;p,管道文件；s,套接字文件；……）

	-maxdepth 2 -type f -name xx.pdf   多个参数叠加搜索，要注意检索时的参数顺序
        !         反向选择
         
根据时间戳查找：
访问时间（atime，单位：天）(amin，单位：分钟)
修改时间（ctime）(cmin)
变化时间（mtime）(mmin)
例：[root@1 ~]# find / -type f -atime +2
查找根目录下的2天以前被访问过的普通文件（+2，2天前；-2，2天内；2，正好2天）

find  -newer  xx    查找比xx更新的文件（根据xx文件的时间戳，列出比xx文件更新的文件）
	. -size   +90M -size -100M   查找当前目录下所有大于90M小于100M的文件
	. -user  u1    查找当前目录下属于u1用户的文件
	. -group u2    查找当前目录下属于u2组的文件
	[root@1 ~]# find / -type f -atime 2
	在两个选项之间加入-or(-o)，条件二选一。
	. iname \*.mp4 -delete     查找当前目录下所有mp4文件并删除文件
	-perm<权限数值>：查找符合指定的权限数值的文件或目录
		-perm  +111   查找ugo里有一位有x权限的文件
			   -111   查找ugo里都有x权限的文件
				（-表示和，+表示或）
	-exec<执行指令>：假设find指令的回传值为True，就执行该指令
		例：find . -type f -user tom -exec chown root {} \;     
		参数-exec是find工具中最强大的一个匹配选项，可以在检索完成后执行特定动作和指令。{}用来将检索后的内容匹配到命令中去。
上面的意思整体就是查找属于tom 用户的所有普通文件，然后将所有文件的所有者改为root。
===============================================================================
