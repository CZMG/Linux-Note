CentOS 6启动流程
1、POST poweron secure test
	CMOS  --软件   --用来修改BIOS固件
2、Boot
3、识别MBR--512B
	446B(引导加载器)：Grub LIL0,存放一段引导代码。
	64B(分区表)，每个分区16B，所以最多4个主分区。
	2B（magic number魔数）。
4、读取stage1（512B，MBR）
	stage1_5    识别各种文件系统
	stage2        出现的就是Grub界面
5、读取grub.conf，这个文件决定了grub界面所有内容
6、根据grub.conf的配置读取内核和虚拟文件系统
7、启动init    父进程 （进程号(PID)为1，这个没了，什么都没了） :/sbin/init
8、读取配置文件 、/etc/inittab（选择进入系统的类型  runlevel）
	Linux系统有7个运行级别(runlevel)
	运行级别0：系统停机状态，系统默认运行级别不能设为0，否则不能正常启动
	运行级别1：单用户工作状态，root权限，用于系统维护，禁止远程登陆
	运行级别2：多用户状态(没有NFS)
	运行级别3：完全的多用户状态(有NFS)，登陆后进入控制台命令行模式
	运行级别4：系统未使用，保留
	运行级别5：X11控制台，登陆后进入图形GUI模式
	运行级别6：系统正常关闭并重启，默认运行级别不能设为6，否则不能正常启动
9、根据inittab中定义的启动级别，去相应的目录启动需要的脚本。比如是0级别，就去/etc/rc0.d目录下启动所有脚本
	同时需要执行fstab和rc.local
	注：fstab是系统自动挂载需要的配置。
======================================================================================
linux启动拓展
1. 关于linux的启动
	init是所有进程的顶层
	init读取/etc/inittab，执行rc.sysinit脚本
	(注意文件名是不一定的,有些unix甚至会将语句直接写在inittab中)
	rc.sysinit脚本作了很多工作:
	init $PATH
	config network
	start swap function
	set hostname
	check root file system, repair if needed
	check root space
	....

	rc.sysinit根据inittab执行rc?.d脚本
	linux是多用户系统，getty是多用户与单用户的分水岭
	在getty之前运行的是系统脚本

2. 关于rc.d
	所有启动脚本放置在 /etc/rc.d/init.d下
	rc?.d中放置的是init.d中脚本的链接，命名格式是:
	S{number}{name}
	K{number}{name}
	S开始的文件向脚本传递start参数
	K开始的文件向脚本传递stop参数
	number决定执行的顺序

4. 关于rc.local
	经常使用的 rc.local 则完全是习惯问题，不是标准。
	各个发行版有不同的实现方法。
======================================================================================
SysV init启动过程中的故障修复
1、root密码的破解
	按e修改内容  末尾添加init 1 或 single 或 s
	按b引导内核进入单用户模式
	passwd root 修改root密码。

2、内核升级失败的修复
	/boot/vmlinuz*******        内核
	/boot/initrd********          虚拟文件系统
	chroot /mnt/sysimage     ----------将光盘中的这个路径切换为当前用户的根目录/
	mount /dev/cdrom  /mnt    --------挂载光盘到当前的mnt目录中，这个mnt是硬盘中的mnt目录
	rpm -ivh     -------参数i表示安装   --force强制
	rpm  -ivh   --force  kernel-2.****** 
	
3、MBR分区中的grub修复（先安装linux，后安装的windows）
模拟：dd  if=/dev/zero  of=/dev/sda  bs=1  count=446(只能写446干掉grub，写512将干掉分区表)
修复：
	进入救援模式，chroot /mnt/image
	grub-install   /dev/sda
4、boot的修复，救援模式
	2和3的结合，先修复内核，再修复grub。
=============================================================================================================
/boot/grub/grub.conf
	splashimage   -->设置grub背景
	hiddenmenu  -->隐藏登录详细信息
	设置grub登录密码：(一般不用，开机能看到家加密码)
		grub-md5-crypt
		输入密码
		打开/boot/grub/grub.conf
		password --md5 "**********"
====================================================================
RHEL7的启动过程
systemd 取代了 sysV init
cgroup   为每个进程分配一个cgroup，让互相不依赖的进程并行启动，减少开机时间。
syslogd  记录系统日志，每个进程分配一个deamons
systemd  使用target来控制系统服务的启动，systemd在/usr/lib/systemd。
RHEL6中使用runlevel，7中用target替代
每次第一个启动的通常是default.target

对比两个系统的启动级别：
0 -->poweroff.target 
1 -->resuce.target/emergency（resuce.target修复不了，则使用emergency）
2 -->multi-user.target 
3 -->
4 -->
5 -->
===========================================================================
target的路径：/usr/lib/systemd/system
主配置路径：/etc/systemd/system/default.target
===========================================================================
systemctl set-default multi-user.target   设置默认启动服务，下次启动生效。
ststemd-analye time        查看开机各项的启动时间。
systemctl isolate graphihcal.target    直接切换进入其他级别。
systemctl list-units    查看当前已启动的服务。
systemctl list-units --type=service 查看后缀为service的服务。
systemctl is-active  sshd.service    查看服务是否启动。
systemctl stop sshd.service      关闭某服务。
==========================================================================
修改grub.cfg来决定系统的启动顺序等需要修改/etc/default/grub，然后使用命令grub2-mkconfig -0 /boot/grub2/grub.cfg来更新grub.cfg的配置。
如果是debain类的OS使用update-grub2来修改。

先用grub2-set-default 1修改默认启动的内核（OS），在用  grub2-mkconfig来更新。
===========================================================================================
resuce模式  单用户模式    进入需要密码
emergency模式  

RHEL7第一种破解密码的方法： init=/bin/sh 
Ctrl+x 引导进入
进入sh2.4#
此时输入passwd 是无法修改成功的
sh2.4#mount -o remount,rw /
mount是挂载，参数是-o是额外的选项，选项就是remount（重新挂载），rw表示权限
sh2.4#touch /.autorelabel    创建这个文件的目的是为了让selinux自动打标签
sh2.4#exec /sbin/init



岗位：devops

pupput

=================================================================================
RHEL7下 第二种破解root密码的方式（推荐）
内核信息尾部加   rd.break      
mount -o remount,rw /sysroot/   重新挂载并要求sysroot可以读写
chroot /sysroot/    切换根
passwd  修改密码
load_policy -i   加载selinux
chcon -t shadow_t /etc/shadow   修改shadow 的上下文
touch ./autorelabel    重建selinux标签
================================================
RHEL7中的grub的修复
通过光盘引导
chroot /mnt/sysimage  切换根
grub2-install /dev/sda   安装grub
================================================
RHEL7中内核等引导文件的修复
chroot /mnt/sysimage 
mount /dev/cdrom /media
rpm -ivh /media/Packages/kernel*****    --force
安装完成后，系统中会生成内核和虚拟文件系统。
grub2-install /dev/sda   
grub2-mkconfig -o /boot/grub2/grub.cfg
================================================
RHEL 7 添加Grub加密
在/etc/grub.d/00_header的末尾添加如下内容：
cat << EOF
set superusers="tom"
password tom redhat
EOF
最后执行更新grub.cfg操作
grub2-mkconfig -o /boot/grub2/grub.cfg
================================================