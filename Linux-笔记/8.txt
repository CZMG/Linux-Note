umask          文件权限过滤符
umask  0333    设置umask值
umask  -S      查看保存的权限
umask值的数字由四位数字构成，最后三位表示ugo，第一位是用来设置SUID、SGID、SBIT
root=0022
文件--666（rw-rw-rw-），目录--777(rwxrwxrwx)
                0022
644                   755
		0333
444                   444
==================================================
lsattr        查看隐藏属性
chattr  +选项  目标文件/目录      修改隐藏属性
	+a    添加a权限，目录中的内容只能创建，不能删除
	-a    删除a权限
	+A    添加A权限，不能修改文件的访问时间(atime)
	+i    添加i权限，针对文件只读，不能做任何修改；针对目录，不能删除和创建内容。包括修改权限。
	+s    删除时备份
	+S    写入时不写入缓存，直接写入硬盘。写入效率会下降。
	+u    删除时备份（用来做数据回复）（未成功过）
    只支持unix/linux系统
===================================================
passwd 用户名      修改用户密码
/etc/passwd 
/etc/shadow       用户密码文件（sha+salt,伪随机）
===================================================
SUID  --4（数字表示）
ll /usr/bin/passwd 
-rwsr-xr-x. 1 root root 30768 11月 24 2015 /usr/bin/passwd
用户位有s权限时，当前执行的用户将获取文件所有者的权限。这个权限通常只是针对文件。
SUID,只能执行二进制文件，其他脚本执行不了。
====================================================
SGID  --2（数字表示）
chmod   g+s   test/     给目录test加上s权限
目录被设置SGID后，任何人在这个目录中创建的文件，都将属于目录所属组。这个权限通常只是针对目录。
=====================================================
SBIT  --1（数字表示）
chmod  O+t   test/      给目录test加上t权限
在设置了SBIT的目录中，只有文件/目录的所有者（以及root）可以删除。
=====================================================
如果给文件/目录设置SUID、SGID、SBIT权限后，出现的是大写的S,T，表示文件/目录本身没有执行权限，如果没有权限，就没有意义。
=====================================================
文件搜索
find  目录  （-print）    查找该目录下所有文件并打印出来（-print可以不打，默认执行）
	默认情况下自动换行 -print \n
	不换行 -print0
find  目录  -name   文件名    查找该目录下某个文件
	-iname    忽略大小写
	-maxdepth 1  定义最大查找深度，最多检索多少层
	-mindepth 1  定义最小查找深度，最少检索多少层
	-type        定义文件类型（l，链接文件；d,目录；f,普通文件；c,字符文件;p,管道文件；s,套接字文件；……）

	-maxdepth 2 -type f -name xx.pdf   多个参数叠加搜索，要注意检索时的参数顺序

根据时间戳查找：
访问时间（atime）(amin)
修改时间（ctime）(cmin)
变化时间（mtime）(mmin)
例：[root@1 ~]# find / -type f -atime +2
查找根目录下的2天以前被访问过的普通文件（+2，2天前；-2，2天内；2，正好2天）

find  -newer  xx    查找比xx更新的文件（根据xx文件的时间戳，列出比xx文件更新的文件）
	. -size   +90M -size -100M   查找当前目录下所有大于90M小于100M的文件
	. -user  u1    查找当前目录下属于u1用户的文件
	. -group u2    查找当前目录下属于u2组的文件
	[root@1 ~]# find / -type f -atime 2
	在两个选项之间加入-or(-o)，条件二选一。
	. iname \*.mp4 -delete     查找当前目录下所有mp4文件并删除文件
	-perm<权限数值>：查找符合指定的权限数值的文件或目录
		-perm  +111   查找ugo里有一位有x权限的文件
			   -111   查找ugo里都有x权限的文件
				（-表示和，+表示或）
	-exec<执行指令>：假设find指令的回传值为True，就执行该指令
		例：find . -type f -user tom -exec chown root {} \;     
		参数-exec是find工具中最强大的一个匹配选项，可以在检索完成后执行特定动作和指令。{}用来将检索后的内容匹配到命令中去。
上面的意思整体就是查找属于tom 用户的所有普通文件，然后将所有文件的所有者改为root。
===============================================================================
SCSI硬盘使用IDE接口。
SAS硬盘是使用SATA接口的SCSI硬盘。
硬盘写数据从最外层的磁道开始写。
0扇区->启停区。
元数据：硬盘的基础属性信息
MBR：grub/boot loader/LILO(446) |  分区表  (64) | magic number(2)
MBR分区：boot sector 引导扇区   |  superblock 超级块 （作用是用来记录块信息的inode）  |   inode (每记录一条增加128B)  | 块/簇
	superblock | 文件系统描述信息  |  块位图  | inode 位图 |  inode  表 |  块/簇    （一个文件最大inode记录128B，一个块4B，一个文件最大分32个块）
	inode表，划分12个直接区，每个直接区3个间接区。
GPT分区：MBR分区（为了兼容）| 第一分区 | 第二分区 |……
	UEFI启动的，都是GPT分区。

vfs 虚拟文件系统（识别各种格式分区，识别底层，将底层转成ext4传给上层）

ls -i  xx    查看xx文件的inode编号
stat    xx   查看xx文件的详细信息
filefrag -v xx  查看xx文件的块信息
df    查看系统磁盘的信息
	-h     human
	-T     查看文件系统格式信息
du  /boot  查看文件夹的大小，显示文件夹内所有文件夹的大小
	-h
	-s     只查看文件夹的大小
	-a     显示所有文件的大小
===============================================================================
文件系统：对一个存储设备上的元数据和数据进行组织管理的机制，可以简单理解为时告诉底层和上层如何去读取、存储数据。
ext4（日志式文件系统）,xfs,ntfs,fat32
内存式文件系统:tmpfs,proc 

日志式文件系统是类unix/linux特有的，它会在启动时系统中生成一个journal。

