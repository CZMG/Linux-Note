进程管理
linux是一个多用户多任务多线程的环境
进程   动态，有一定的生命周期，随着程序动态产生和消亡
程序   静态

前台：程序打开的进程只有在执行完成后才会在终端返回信息，这个过程中，用户不能执行其他新的进程
后台：程序启动时跟上&，表示将进程放在后台执行。不用等待进程结束，用户也可以执行其他的新的进程。但这种方式不能用于交互式的进程

命令+&      执行命令并调到后台运行
jobs     查看后台工作的进程
fg 1     直接将后台的进程拉到前台，后面的1是通过jobs查看到的后台进程序号
bg       将前台的进程调到后台（先用ctrl+z暂停进程，在用bg放到后台）
ctrl + z 将一个进程停止并放到后台

killall  -9   进程名         通过进程名强制杀死该进程,9表示强制
kill -9  %1                     强制杀死后台第一个进程 （%表示后台）
pidof    进程名             显示某进程的进程号(pid)
kill -9 13842                   通过pid号杀死进程

脱机管理：我们在执行某一个进程时，有的用户是远程，有的是本地，如果在本地终端开启了一个进程远程使用，这时如果因为ctrl+c或者终端异常退出，这些情况都会导致远程用户无法使用这个进程。我们需要脱机管理这个进程。nohup可以忽略所有的挂断信号，继续执行。
nohup  ping localhost        脱机进行ping localhost 命令。

ps    显示当前进程中运行的所有进程（静态显示。场景：快速定义出某一个进程）
	-aux   显示系统中的所有的进程
		| grep  进程名，显示某进程的信息
		| less      显示某时间段的所有用户的进程信息，并显示帮助栏
					START-状态
							S 表示可以终端的休眠状态（不是S 表示不正常）
								s  表示子进程
							R 表示进程正在运行
							T 表示停止的进程
							l  表示多线程
							X 表示死掉的进程
							Z 表示僵尸进程
							N 表示低优先级的进程
							< 表示高优先级的进程
							+  表示在后台的进程
	-ex  -o user,%cpu,%mem     指定格式输出信息
	-l         长模式查看
	-a     显示所有用户的进程
pstree    按树状图显示正在运行的进程

进程的执行顺序
调度策略会对系统进程进行排序，调度策略默认是根据优先级来排序的。
top  实时显示进程信息
	-d  1    每1s刷新一次信息

CPU信息：
load average: 0.00, 0.00, 0.00  平均负载，1分钟5分钟15分钟三个时间段cpu的负载情况
us表示用户空间占用cpu的资源情况
sy表示内核空间占用cpu的资源情况，由大的I/O造成的sy高
ni表示改变优先级的进程占用的cpu资源
id表示空闲的cpu资源
wa表示I/O在等待占用的资源
hi硬件中断占用的资源
si表示软件中断占用的资源
st（steal  time）表示虚拟CPU等待占用物理CPU的资源比


MEM信息：
buffers:即将写入的缓存
cache:即将读取的缓存
都生活在RAM里

进程信息：
PR：优先级。由系统的优先系数（内核主动分配的，用户不能修改）+nice值得到。数字越小，优先级越高。ni为-20是最优先执行。
NI：nice值.从-20到19，默认的nice值是0。最大是-20，最小是19。数字越高，优先级别越高，最优先的是-20。
VIRT:虚拟内存总量（swap+res）、
RES:真实物理内存
SHR：共享内存

1   显示所有逻辑CPU的详细信息
x   对CPU列高亮
	shift+>表示移动高亮的列（默认是CPU列）
r   修改nice值来决定某一个进程的优先级（在top外通过命令修改nice值：renice   nice值  进程号）

nice -n 19 进程名        在进程启动前就指定nice值