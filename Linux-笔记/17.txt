shell script
./xx.sh ： 打开一个子shell执行脚本
bash xx.sh ：打开一个子shell执行脚本
source xx.sh ：在当前shell中执行
======================================
数值的比较
中文         单词             字符
等于         -eq              ==
大于         -gt              >
大于等于     -ge              >=
小于         -lt              <
小于等于     -le              <=
不能于       !-eq             !==
=======================================
判断
1、test
[root@centos6 test]# a=3
[root@centos6 test]# b=9
[root@centos6 test]# test $a -lt $b
[root@centos6 test]# echo $?
0

2、[]
[root@centos6 test]# [ $a -eq $b ]
[root@centos6 test]# echo $?
1

	[ -f /etc/passwd ]判断/etc/passwd这个文件是否存在
	sleep 4    脚本休眠4秒
	[-f]:判断文件是否存在
	[-d]:判断目录是否存在
	[-r -w -x]:判断读写执行权限
	[-z]: 判断字符是否存在

注：引用不等于： [! $? -eq]
========================================================
条件判断
1、简单条件判断
if ; then  
else
fi

2、多条件判断
if ; then
elif(多次执行)；then
else
fi

3、case……esac
case    变量 in
	值1）
	命令;;
	值2）
	命令;;
esac

=============================================
函数
function xx()
{

}
直接xx调用函数xx	
=========================================
循环
while
while   判断（满足）
do 
	xx
done

实例：  
  1 #!/bin/bash
  2 nu=0
  3 while [ ${nu} -lt 10 ] 
  4 do
  5         let nu++
  6         echo ${nu}
  7 done
=============================
不定循环
until   (不满足条件循环)
do
done
===============================
固定循环
for $1 in *
do 
done
========================
脚本录屏
script -t 2>timeing.log -a output.session 
exit 退出
scriptreply timeing.log output.session
=======================================
作业：
1、写一个脚本统计目录中的文件数量
2、写一个批量创建用户的脚本
3、写一个统计系统中普通用户数量的脚本
4、写一个脚本，判断系统中有那些端口被开放(netstat -nupls  |  ss)
